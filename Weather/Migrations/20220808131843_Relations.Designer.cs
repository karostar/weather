// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Weather;

#nullable disable

namespace Weather.Migrations
{
    [DbContext(typeof(ContextDb))]
    [Migration("20220808131843_Relations")]
    partial class Relations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Weather.WeatherMeasurement", b =>
                {
                    b.Property<int>("WeatherMeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WeatherMeasurementId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("int");

                    b.Property<int>("WindStrength")
                        .HasColumnType("int");

                    b.HasKey("WeatherMeasurementId");

                    b.ToTable("WeatherMeasurements");
                });

            modelBuilder.Entity("Weather.WeatherPrediction", b =>
                {
                    b.Property<int>("WeatherPredictionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WeatherPredictionId"), 1L, 1);

                    b.Property<int>("TemperatureCPrediction")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int>("WeatherMeasurementId")
                        .HasColumnType("int");

                    b.HasKey("WeatherPredictionId");

                    b.HasIndex("WeatherMeasurementId");

                    b.ToTable("WeatherPredictions");
                });

            modelBuilder.Entity("Weather.WeatherPrediction", b =>
                {
                    b.HasOne("Weather.WeatherMeasurement", null)
                        .WithMany("WeatherPredictions")
                        .HasForeignKey("WeatherMeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Weather.WeatherMeasurement", b =>
                {
                    b.Navigation("WeatherPredictions");
                });
#pragma warning restore 612, 618
        }
    }
}
